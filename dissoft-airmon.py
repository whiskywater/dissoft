import subprocess
import time
import os

def get_interface():
    # Prompt user for the network interface
    interface = input("Enter the network interface (e.g., wlan0, wlo1): ")
    return interface

def start_monitor_mode(interface):
    # Start monitor mode
    try:
        subprocess.check_call(['sudo', 'airmon-ng', 'start', interface])
        return interface + "mon"  # Assuming the interface name changes to <interface>mon
    except subprocess.CalledProcessError as e:
        print(f"Failed to set monitor mode: {e}")
        exit(1)

def stop_monitor_mode(interface):
    # Stop monitor mode
    try:
        subprocess.check_call(['sudo', 'airmon-ng', 'stop', interface])
    except subprocess.CalledProcessError as e:
        print(f"Failed to stop monitor mode: {e}")

def scan_wifi(interface):
    # Command to scan wifi networks using airodump-ng
    command = ['sudo', 'airodump-ng', '--write-interval', '1', '--output-format', 'csv', '--write', '/tmp/scan_result', interface]
    try:
        # Execute the command
        subprocess.Popen(command)
        time.sleep(30)  # Run the scan for 30 seconds
        subprocess.Popen(['sudo', 'killall', '-s', 'SIGINT', 'airodump-ng'])  # Gracefully stop airodump-ng
    except subprocess.CalledProcessError as e:
        print(f"Failed to scan networks: {e}")
    except KeyboardInterrupt:
        print("Scan interrupted by user.")

def parse_and_save(file):
    # Path to the CSV file generated by airodump-ng
    csv_file_path = '/tmp/scan_result-01.csv'
    try:
        with open(csv_file_path, 'r') as f:
            for line in f:
                if 'Station MAC' in line:  # Stop at the station details part
                    break
                if line and ',' in line:
                    details = line.split(',')
                    essid = details[-1].strip()
                    if essid and essid != 'ESSID':
                        file.write(f"ESSID: {essid}\n")
        file.write('=' * 32 + '\n')
    except FileNotFoundError:
        print("No scan data found.")

def main():
    interface = get_interface()
    mon_interface = start_monitor_mode(interface)
    # Open the output file in append mode
    with open('output.txt', 'a') as file:
        try:
            scan_wifi(mon_interface)
            parse_and_save(file)
        finally:
            stop_monitor_mode(mon_interface)

if __name__ == "__main__":
    main()
